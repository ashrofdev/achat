{"version":3,"sources":["components/alert.m4a","components/Head.js","components/MessageBox.js","components/MessageList.js","components/MessageArea.js","components/Friends.js","components/Body.js","components/Signin.js","components/Register.js","components/LandingPage.js","components/LandingPageAnime.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","particlesOptions","particles","number","value","Head","react_default","a","createElement","className","particles_default","params","MessageBox","_ref","name","message","time","MessageList","details","messageBox","map","i","e","components_MessageBox","key","id","mtime","MessageArea","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onclick","asyncToGenerator","regenerator_default","mark","_callee","loader","wrap","_context","prev","next","document","classList","add","querySelector","appendChild","console","log","fetch","method","headers","Content-Type","body","JSON","stringify","catch","err","remove","then","response","json","data","setState","messages","scrollBy","stop","state","length","_this2","setInterval","_callee2","_context2","setTimeout","play","addEventListener","components_MessageList","placeholder","onClick","src","require","Component","Friends","users","List","joined","Body","components_Friends","components_MessageArea","showRegister","Signin","onrouteChange","type","Register","onSubmitRegister","LandingPage","components_Signin","components_Register","words","LandingPageAnime","objectDestructuringEmpty","style","random","Math","round","word","textContent","span","App","password","isValid","route","error","domEl","email","components_Head","components_LandingPageAnime","components_LandingPage","components_Body","React","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4f8301cc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/alert.5665aa81.m4a\";","import React from 'react'\nimport './head.css'\nimport Particles from 'react-particles-js';\n\n\nconst particlesOptions = {\n    particles: {\n      number: {\n        value: 5\n      }\n    }\n}\n\nconst Head = () => {\n    return (\n        <header className=\"header\">\n            <Particles className='particles'\n            params={particlesOptions} />\n            <div className=\"left\">\n                <h1 className=\"head\"><span>A</span>-chat</h1>\n                <p>The best chatting experience ever.</p>\n            </div>\n        </header>\n    )\n}\nexport default Head","import React from 'react'\n\nconst MessageBox =({name, message, time})=> {\n    return (\n        <div className=\"message-box\">\n            <span>{name}</span>\n            <p>{message} <span className=\"time\">{time}</span></p>\n        </div>\n    )\n    \n}\n\nexport default MessageBox","import React from 'react'\nimport MessageBox from './MessageBox'\n\nconst MessageList =({details})=> {\n    const messageBox = details.map((i,e) => {\n        return <MessageBox key={details[e].id} name={details[e].name} message={details[e].message} time = { details[e].mtime} />\n    });\n    return (\n        <div>\n            {messageBox}\n        </div>\n    )\n\n    \n}\n\nexport default MessageList","import React, { Component } from 'react'\nimport './message.css'\nimport MessageList from './MessageList'\n\n\nclass MessageArea extends Component {\n    constructor(props){\n        super(props)\n        this.state ={\n            messages: [],\n            length: 0\n        }\n    }\n    componentDidMount(){\n        setInterval(async() => {\n            await fetch('https://cryptic-cliffs-40445.herokuapp.com/messages').then((response)=>{\n                return response.json()\n            }).then((data)=>{\n                this.setState({messages: data})\n                setTimeout(() => {\n                    this.setState({length: data.length})\n                }, 1000);\n                if(data.length > this.state.length) {\n                    document.querySelector('audio').play()\n                    document.querySelector('.message-list').scrollBy(0,10000)\n                }\n            })\n        }, 1000);\n        document.querySelector('input').addEventListener('keypress', (e)=>{\n            if (e.key==='Enter') {\n                this.onclick()\n            }\n        })\n    }\n     onclick= async ()=>{\n        const loader = document.createElement('p')\n        loader.classList.add('loader', 'loaderm')\n        document.querySelector('.message-list').appendChild(loader)\n        console.log(document.querySelector('input').value)\n        await fetch('https://cryptic-cliffs-40445.herokuapp.com/send-message', {\n          method: 'post',\n          headers: {'Content-Type': 'application/json'},\n          body: JSON.stringify({\n            name: this.props.name,\n            message: document.querySelector('input').value\n          })\n        }).catch((err)=>{\n            loader.remove()\n        })\n        loader.remove()\n        await fetch('https://cryptic-cliffs-40445.herokuapp.com/messages').then((response)=>{\n            return response.json()\n        }).then((data)=>{\n            this.setState({messages: data})\n        })\n        document.querySelector('input').value = ''\n        document.querySelector('.message-list').scrollBy(0,10000)\n    }\n\n    render(){\n        return (\n            <div className=\"message\">\n                <div className=\"message-list\">\n                    <MessageList details = {this.state.messages}/>\n                </div>\n                <div className=\"form\">\n                    <input placeholder=\"Enter message\"/>\n                    <button onClick={this.onclick}>Send</button>\n                </div>\n                <audio>\n                    <source src={require('./alert.m4a')}/>\n                </audio>\n            </div>\n        )\n    }\n}\nexport default MessageArea","import React, { Component } from 'react'\nimport './friends.css'\n\n\n\nconst Friends = ({users}) => {\n    const List = users.map((i,e)=>{\n            return (\n                <div className=\"fri\">\n                    <div> {users[e].name} </div>\n                    <span> {users[e].joined} </span>\n                </div>\n                \n            )\n    })\n\n    return (\n        <div className=\"friends\">\n            <h1 className=\"f-head\">Users of Group chat</h1>\n            <ol className=\"ol\">\n                    {List}\n            </ol>\n        </div>\n    )\n}\n    \n    \n    \n        \n    \n\n\nexport default Friends","import React from 'react'\nimport MessageArea from './MessageArea'\nimport Friends from './Friends'\nimport './body.css'\n\nconst Body = ({name, users}) => {\n    return (\n        <div className=\"content\">\n            <Friends users={users}/>\n            <MessageArea name={name}/>\n        </div>\n    )\n}\nexport default Body","import React from 'react'\nimport './signin.css'\n\nconst showRegister = ()=>{\n    document.querySelector('.register').classList.add('show')\n    document.querySelector('.signin').classList.add('go')\n    setTimeout(() => {\n        document.querySelector('.signin').classList.add('ani')\n    }, 300);\n}\n\nconst Signin = ({onrouteChange}) => {\n    return (\n        <div className=\"signin\">\n            <h1>Sign In</h1>\n            <input className=\"name\" placeholder=\"Username or Email\"/>\n            <input className=\"pin\" type=\"password\" placeholder=\"Password\"/>\n            <button onClick={onrouteChange}>Sign in</button>\n            <span onClick={showRegister}>Register</span>\n        </div>\n    )\n}\nexport default Signin","import React from 'react'\nimport './register.css'\n\n\n\nconst Register = ({onSubmitRegister}) =>{\n    return (\n        <div className=\"signin register\">\n            <h1>Register</h1>\n            <input className=\"rname\" placeholder=\"Username\"/>\n            <input className=\"email\" placeholder=\"Email\"/>\n            <input className=\"rpassword\" type=\"password\" placeholder=\"Password\"/>\n            <button onClick={onSubmitRegister}>Register</button>\n        </div>\n    )\n}\nexport default Register","import React from 'react'\nimport './landing.css'\nimport Signin from './Signin'\nimport Register from './Register';\n\nconst LandingPage = ({onrouteChange, onSubmitRegister}) => {\n    return (\n        <div className=\"home-page\">\n            <Signin onrouteChange={onrouteChange}/>\n            <Register onSubmitRegister={onSubmitRegister}/>\n        </div>\n    )\n}\nexport default LandingPage","import React from 'react'\nimport './anime.css'\n\nconst words = ['family', 'classmates', 'friends', 'co-workers']\n\n\n\nconst LandingPageAnime = ({}) =>{\n       const anime = setInterval(() => {\n            document.querySelector('.word').style = 'transform: translateY(2rem) rotateX(80deg); opacity: 0;'\n            setTimeout(() => {\n                document.querySelector('.word').style = 'transform: translateY(0) rotateX(0); opacity: 1; border: none;'\n                let random = Math.round(Math.random() * words.length - 1)\n                let word = words[random]\n                document.querySelector('.word').textContent = word\n                setTimeout(() => {\n                    document.querySelector('.word').style = 'transform: translateY(-2rem) rotateX(-60deg);  opacity: 0'\n                    setTimeout(() => {\n                        document.querySelector('.word').style = 'display: none'\n                        \n                    }, 700);\n                }, 2000);\n            }, 100);\n            \n            console.log(5)\n        }, 2900);\n    return (\n        <div className=\"anime\">\n            <h2 className=\"h1\">The best chatting interface for you and your <span className=\"el\"> <span span className=\"word\"></span></span></h2>\n        </div>\n    )\n}\n\nexport default LandingPageAnime","import React from 'react';\nimport Head from './components/Head';\nimport Body from './components/Body';\nimport './App.css';\nimport LandingPage from './components/LandingPage';\nimport LandingPageAnime from './components/LandingPageAnime';\n\n\n\nclass App extends React.Component {\n  constructor(){\n    super()\n    this.state = {\n      name: '',\n      route: 'signin',\n      users: []\n    }\n  }\n  componentDidMount(){\n    setTimeout(() => {\n      fetch('https://cryptic-cliffs-40445.herokuapp.com/users').then((response)=>{\n          return response.json()\n      }).then((data)=>{\n        this.setState({users: data})\n      })\n    }, 10000);\n    \n  }\n  \n  onrouteChange = async () =>{\n    let details = {\n      name: document.querySelector('.name').value,\n      password: document.querySelector('.pin').value\n    }\n    const loader = document.createElement('p')\n    loader.classList.add('loader')\n    document.querySelector('.signin').appendChild(loader)\n    await fetch('https://cryptic-cliffs-40445.herokuapp.com/users').then(response=>{\n      return response.json()\n    }).then(data=>{\n      console.log(data, '........')\n      const isValid = function() {\n        for (var i = 0; i < data.length; i++) {\n          if (details.name === data[i].name && details.password === data[i].password) {\n            return true\n          } \n        }\n      }\n      if (isValid()) {\n        loader.remove()\n        console.log(55555555555)\n        this.setState({route: 'home'})\n        this.setState({name: details.name})\n      } else {\n        loader.remove()\n          const err = document.createElement('p')\n          err.classList.add('err')\n          err.textContent = 'Authentication failed'\n          document.querySelector('.signin').appendChild(err)\n      }\n    }).catch((error)=>{\n      const err = document.createElement('p')\n      err.classList.add('err')\n      err.textContent = '(Network error)'\n      document.querySelector('.signin').appendChild(err)\n      loader.remove()\n    })\n    \n  }\n  onSubmitRegister = () => {\n        const domEl = {\n          email: document.querySelector('.register .email').value,\n          password: document.querySelector('.register .rpassword').value,\n          name: document.querySelector('.register .rname').value\n        }\n    if(domEl.email !== '' && domEl.password !== '') {\n        fetch('https://cryptic-cliffs-40445.herokuapp.com/register', {\n          method: 'post',\n          headers: {'Content-Type': 'application/json'},\n          body: JSON.stringify({\n            email: document.querySelector('.register .email').value,\n            password: document.querySelector('.register .rpassword').value,\n            name: document.querySelector('.register .rname').value\n          })\n        })\n        this.setState({route: 'home'})\n        this.setState({name: document.querySelector('.register .rname').value})\n    }else {\n      const err = document.createElement('p')\n      err.classList.add('err')\n      err.textContent = 'Please fill out the forms'\n      document.querySelector('.register').appendChild(err)\n    }\n\n    \n    \n  }\n  render(){\n    return (\n      <div className=\"App\">\n        <Head />\n        <LandingPageAnime/>\n        {\n          this.state.route === 'signin'?\n              <div>\n                <LandingPage onrouteChange={this.onrouteChange} \n                state={this.state} onSubmitRegister={this.onSubmitRegister}/>\n              </div>\n          :\n            <div>\n              <Body name={this.state.name} users={this.state.users}/>\n            </div>\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}